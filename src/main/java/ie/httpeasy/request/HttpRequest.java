/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ie.httpeasy.request;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.*;

public class HttpRequest {
    private Socket client;
    private DataOutputStream toServer;
    private DataInputStream fromServer;
    private int port;
    private String request;
    private String storedResult;

    public HttpRequest(String serverName) {
        this(serverName, 80);
    }
    public HttpRequest(String serverName, int port) {
        System.out.printf("Connecting to '%s' on port %s\n", serverName, port);
        try {
            client = new Socket(serverName, port);
            this.port = port;
            OutputStream tempout = client.getOutputStream();
            InputStream tempin = client.getInputStream();
            toServer = new DataOutputStream(tempout);
            fromServer = new DataInputStream(tempin);
        } catch (IOException e) {
            client = null;
            this.port = -1;
            System.err.println("Connection failed!");
        }
    }

    public HttpRequest setRequest(String request) {
        this.request = request;
        return this;
    }

    public HttpRequest get(String request) {
        return this.setRequest(request).get();
    }

    public HttpRequest get() {
        if (!request.isEmpty()) {
            try {
                toServer.writeBytes("GET " + request + " \r\n\r\n");
            } catch (IOException e) {
                System.err.println("Failed to write to output stream!");
                return null;
            }
            StringBuilder builder = new StringBuilder(1024);
            try {
                char c;
                do {
                    c = (char)fromServer.readByte();
                    builder.append(c);
                } while(c != '\0');
            } catch (EOFException e) {
                
            } catch (IOException e) {
                System.err.println("Failed to read from input stream!");
            }
            storedResult = builder.toString();
        }
        return this;
    }

    public String getStored() {
        return storedResult;
    }

    public boolean isConnectionSuccessful() {
        return (client != null) && (port > 0);
    }

    public boolean isConnectionFailed() {
        return !isConnectionSuccessful();
    }
}
